version: '3'
services:
  redis:
    image: redis:latest
    command: ["redis-server","--appendonly","yes"]
    networks:
      - internalNetwork
    logging:
      driver: "none"
    volumes:
      - redis-data:/data
  rabbit:
    image: rabbitmq:latest
    networks:
      - internalNetwork
    logging:
      driver: "none"
  sqldata:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
        MYSQL_ROOT_PASSWORD: 'test_pass' # TODO: Change this
        MYSQL_USER: 'myuser'
        MYSQL_PASS: 'pass'
    volumes:
      - my-sql:/var/lib/mysql  
    networks:
      - internalNetwork
      - externalNetwork
  postgres:
    image: 192.168.1.135:5000/post:latest
    networks:
      - internalNetwork
    logging:
      driver: "none"

  capture:
    image: 192.168.1.135:5000/capture:latest
    networks:
      - internalNetwork
      - externalNetwork
    command: >
      /bin/bash -c "
        sleep 20;
        python3 getCamera.py;"

  check:
    image: 192.168.1.135:5000/check:latest
    networks:
      - internalNetwork
    command: >
      /bin/bash -c "
        sleep 20;
        python3 check.py"

  keep:
    image: 192.168.1.135:5000/keep:latest
    volumes:
      - ./api-data/motion:/shared
    networks:
      - internalNetwork
    command: >
      /bin/bash -c "
        sleep 20;
        ./keep_motion;"

  web:
    image: 192.168.1.135:5000/web:latest
    ports:
      - "8001:8001"
    networks:
      - internalNetwork
      - externalNetwork


  api:
    image: 192.168.1.135:5000/api:latest
    volumes:
      - ./api-data:/go/log
    ports:
      - "8000:8000"
    command: >
      /bin/bash -c "
        sleep 20;
        ./auth;"
    networks:
      - internalNetwork
      - externalNetwork


networks:
  internalNetwork:
    internal: true
  externalNetwork:
    internal: false

volumes:
  my-sql: